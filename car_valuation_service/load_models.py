from ml.model import Model
from gensim.models.word2vec import Word2Vec
from gensim.models import KeyedVectors
from pathlib import Path
import pandas as pd
import pickle


def load_model() -> Model:
    # equipment modes
    modes_path = "data/weights/equipment_modes.csv"
    path = Path(__file__).parent / modes_path
    equipment_modes = pd.read_csv(path)

    # base_price_grouper
    weights_save_path = "data/weights/base_price_grouper.csv"
    path = Path(__file__).parent / weights_save_path
    base_price_grouper = pd.read_csv(path)

    # desc w2v
    model_save_path = Path(__file__).parent / 'data/weights/desc_w2v_model'
    word_vectors_save_path = Path(__file__).parent / 'data/weights/desc_w2v_word_vectors'
    w2v_model = Word2Vec.load(str(model_save_path))
    w2v_model_wv = KeyedVectors.load(str(word_vectors_save_path), mmap='r')

    # desc tf-idf
    model_save_path = Path(__file__).parent / 'data/weights/desc_tfidf_model.pkl'
    with open(model_save_path, 'rb') as f:
        tfidf = pickle.load(f)

    # eq w2v
    model_save_path = Path(__file__).parent / 'data/weights/equip_w2v_model'
    word_vectors_save_path = Path(__file__).parent / 'data/weights/equip_w2v_word_vectors'
    equipment_w2v_model = Word2Vec.load(str(model_save_path))
    equipment_w2v_model_wv = KeyedVectors.load(str(word_vectors_save_path), mmap='r')

    # mod w2v
    model_save_path = Path(__file__).parent / 'data/weights/modification_w2v_model'
    word_vectors_save_path = Path(__file__).parent / 'data/weights/modification_w2v_word_vectors'
    modification_w2v_model = Word2Vec.load(str(model_save_path))
    modification_w2v_model_wv = KeyedVectors.load(str(word_vectors_save_path), mmap='r')

    features_models_dict = {
        "base_price_grouper": base_price_grouper,
        "equipment_modes": equipment_modes,
        "w2v_model": w2v_model,
        "w2v_model_wv": w2v_model_wv,
        "tfidf": tfidf,
        "eq_w2v_model": equipment_w2v_model,
        "eq_w2v_model_wv": equipment_w2v_model_wv,
        "mod_w2v_model": modification_w2v_model,
        "mod_w2v_model_wv": modification_w2v_model_wv,
    }

    model = Model(models_dict=features_models_dict)
    return model


if __name__ == "__main__":
    import time

    car = {
        "brand": "Porsche",
        "model": "Cayenne",
        "sale_end_date": "2022-11-26 00:00:00",
        "description": "üî•üî•üî•–°–ü–ï–¶–ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï!!!üî•üî•üî• \n\nüöô Porsche Cayenne III\n\n    ‚úÖ WP1ZZZ9YZKDA05407\n\n‚ö° –ê–≤—Ç–æ–º–æ–±–∏–ª—å –∏–∑ –ï–≤—Ä–æ–ø—ã!!! –ò–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ!!!\n\n   ‚úÖ1 –í–ª–∞–¥–µ–ª–µ—Ü. –≠–ü–¢–°\n   ‚úÖ–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤ —Ä–æ–¥–Ω–æ–º –æ–∫—Ä–∞—Å–µ.\n   ‚úÖ–û–¢–õ–ò–ß–ù–´–ô –í–ù–ï–®–ù–ò–ô –í–ò–î\n   ‚úÖ–ß–ò–°–¢–´–ô –£–•–û–ñ–ï–ù–ù–´–ô –°–ê–õ–û–ù\n   ‚úÖ–ê–í–¢–û–ú–û–ë–ò–õ–¨ –ü–†–û–®–ï–õ –ö–û–ú–ü–õ–ï–ö–°–ù–£–Æ –ò –ö–†–ò–ú–ò–ù–ê–õ–ò–°–¢–ò–ß–ï–°–ö–£–Æ –î–ò–ê–ì–ù–û–°–¢–ò–ö–£\n\nüí• –°–û–°–¢–û–Ø–ù–ò–ï –ù–û–í–û–ì–û –ê–í–¢–û–ú–û–ë–ò–õ–Ø!üí•\n\n–î–∏–ª–µ—Ä—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä –ê–£–î–ò –¶–ï–ù–¢–† –í–û–°–¢–û–ö —É–¥–æ–±–Ω–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∞ –í–æ—Å—Ç–æ–∫–µ –ú–æ—Å–∫–≤—ã, 2–∫–º –æ—Ç –ú–ö–ê–î. \n\n–ù–∞–º –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –í—ã —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ —Å–µ–±—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º–∏!\n\nüîÅ–ü—Ä–æ–¥–∞–π—Ç–µ –∏–ª–∏ –æ–±–º–µ–Ω—è–π—Ç–µ —Å–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö!\n\n–û—Å–º–æ—Ç—Ä –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 9:00 –¥–æ 21:00, –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞ –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö.\n–î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ –ê–£–î–ò –¶–ï–ù–¢–† –í–û–°–¢–û–ö!\n\n–ü–¢–° –æ—Ä–∏–≥–∏–Ω–∞–ª.\n\n–ú–µ—Å—Ç–æ –æ—Å–º–æ—Ç—Ä–∞\n\n–û—Å–º–æ—Ç—Ä–µ—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –º–æ–∂–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: –ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å, –ë–∞–ª–∞—à–∏—Ö–∞, —à. –≠–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤, –¥. 12–ë.\n\n–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è ¬´Cayenne Platinum Edition¬ª:\n\n–ê–∫—Ç–∏–≤–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:\n‚Äî –ê–Ω—Ç–∏–±–ª–æ–∫–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n‚Äî –ê–Ω—Ç–∏–ø—Ä–æ–±—É–∫—Å–æ–≤–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n‚Äî –°–∏—Å—Ç–µ–º–∞ –∫—É—Ä—Å–æ–≤–æ–π —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏\n‚Äî –°–∏—Å—Ç–µ–º–∞ –ø–æ–º–æ—â–∏ –ø—Ä–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º —Ç–æ—Ä–º–æ–∂–µ–Ω–∏–∏\n‚Äî –î–∞—Ç—á–∏–∫ –¥–∞–≤–ª–µ–Ω–∏—è –≤ —à–∏–Ω–∞—Ö\n‚Äî –≠–†–ê-–ì–õ–û–ù–ê–°–°\n–ü–∞—Å—Å–∏–≤–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:\n‚Äî –ü–æ–¥—É—à–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–æ–¥–∏—Ç–µ–ª—è —Å –∑–∞—â–∏—Ç–æ–π –∫–æ–ª–µ–Ω–µ–π\n‚Äî –ü–æ–¥—É—à–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–∞—Å—Å–∞–∂–∏—Ä–∞\n‚Äî –ë–æ–∫–æ–≤—ã–µ –ø–µ—Ä–µ–¥–Ω–∏–µ –ø–æ–¥—É—à–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n‚Äî –û–∫–æ–Ω–Ω—ã–µ —à—Ç–æ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n‚Äî –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞–º–∫–æ–≤ –∑–∞–¥–Ω–∏—Ö –¥–≤–µ—Ä–µ–π\n‚Äî –°–∏—Å—Ç–µ–º–∞ –∫—Ä–µ–ø–ª–µ–Ω–∏—è –¥–µ—Ç—Å–∫–∏—Ö –∞–≤—Ç–æ–∫—Ä–µ—Å–µ–ª\n–ü—Ä–æ—Ç–∏–≤–æ—É–≥–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:\n‚Äî –°–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è —Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é\n‚Äî –î–∞—Ç—á–∏–∫ –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –≤ —Å–∞–ª–æ–Ω (–¥–∞—Ç—á–∏–∫ –æ–±—ä–µ–º–∞)\n‚Äî –ò–º–º–æ–±–∏–ª–∞–π–∑–µ—Ä\n‚Äî –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∑–∞–º–æ–∫\n–ü–æ–º–æ—â—å –ø—Ä–∏ –≤–æ–∂–¥–µ–Ω–∏–∏:\n‚Äî –ë–æ—Ä—Ç–æ–≤–æ–π –∫–æ–º–ø—å—é—Ç–µ—Ä\n‚Äî –ö—Ä—É–∏–∑-–∫–æ–Ω—Ç—Ä–æ–ª—å\n‚Äî –ü–∞—Ä–∫—Ç—Ä–æ–Ω–∏–∫ –ø–µ—Ä–µ–¥–Ω–∏–π –∏ –∑–∞–¥–Ω–∏–π\n‚Äî –°–∏—Å—Ç–µ–º–∞ –ø–æ–º–æ—â–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –≤ –≥–æ—Ä—É\n‚Äî –°–∏—Å—Ç–µ–º–∞ –ø–æ–º–æ—â–∏ –ø—Ä–∏ —Å–ø—É—Å–∫–µ —Å –≥–æ—Ä—ã\n‚Äî –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–ª—å–Ω–∏–º —Å–≤–µ—Ç–æ–º\n‚Äî –î–∞—Ç—á–∏–∫ —Å–≤–µ—Ç–∞\n‚Äî –î–∞—Ç—á–∏–∫ –¥–æ–∂–¥—è\n–ö–æ–º—Ñ–æ—Ä—Ç:\n‚Äî –ê–∫—Ç–∏–≤–Ω—ã–π —É—Å–∏–ª–∏—Ç–µ–ª—å —Ä—É–ª—è\n‚Äî –ó–∞–ø—É—Å–∫ –¥–≤–∏–≥–∞—Ç–µ–ª—è —Å –∫–Ω–æ–ø–∫–∏\n‚Äî –°–∏—Å—Ç–µ–º–∞ ‚Äú—Å—Ç–∞—Ä—Ç-—Å—Ç–æ–ø‚Äù\n‚Äî –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ –∫–ª—é—á–∞\n‚Äî –î–æ–≤–æ–¥—á–∏–∫ –¥–≤–µ—Ä–µ–π\n‚Äî –†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —Ä—É–ª—è\n‚Äî –≠–ª–µ–∫—Ç—Ä–æ—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —Å–∏–¥–µ–Ω—å—è –≤–æ–¥–∏—Ç–µ–ª—è —Å –ø–∞–º—è—Ç—å—é –ø–æ–ª–æ–∂–µ–Ω–∏—è\n‚Äî –≠–ª–µ–∫—Ç—Ä–æ—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —Å–∏–¥–µ–Ω—å—è –ø–∞—Å—Å–∞–∂–∏—Ä–∞\n‚Äî –≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–µ–∫–ª–æ–ø–æ–¥—ä–µ–º–Ω–∏–∫–∏ –ø–µ—Ä–µ–¥–Ω–∏–µ –∏ –∑–∞–¥–Ω–∏–µ\n‚Äî –≠–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–≤–æ–¥ –∑–µ—Ä–∫–∞–ª\n‚Äî –≠–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–≤–æ–¥ –∫—Ä—ã—à–∫–∏ –±–∞–≥–∞–∂–Ω–∏–∫–∞\n–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–º–∞—Ç–æ–º –∏ –æ–±–æ–≥—Ä–µ–≤:\n‚Äî –ö–ª–∏–º–∞—Ç-–∫–æ–Ω—Ç—Ä–æ–ª—å 2-–∑–æ–Ω–Ω—ã–π\n‚Äî –ü–æ–¥–æ–≥—Ä–µ–≤ —Å–∏–¥–µ–Ω–∏–π –≤–æ–¥–∏—Ç–µ–ª—è –∏ –ø–∞—Å—Å–∞–∂–∏—Ä–∞\n‚Äî –ü–æ–¥–æ–≥—Ä–µ–≤ —Ä—É–ª—è\n‚Äî –û–±–æ–≥—Ä–µ–≤ –∑–µ—Ä–∫–∞–ª\n–ú—É–ª—å—Ç–∏–º–µ–¥–∏–∞ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è:\n‚Äî –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n‚Äî CD\n‚Äî USB\n‚Äî TV\n‚Äî –§—É–Ω–∫—Ü–∏—è Apple CarPlay\n‚Äî –§—É–Ω–∫—Ü–∏—è Android Auto\n‚Äî –ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ\n‚Äî Bluetooth\n‚Äî –ú—É–ª—å—Ç–∏—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä—É–ª–µ–≤–æ–µ –∫–æ–ª–µ—Å–æ\n‚Äî –†–æ–∑–µ—Ç–∫–∞ 12V\n–°–∞–ª–æ–Ω –∏ –∏–Ω—Ç–µ—Ä—å–µ—Ä:\n‚Äî –ö–æ–∂–∞–Ω–∞—è –æ–±–∏–≤–∫–∞ —Å–∞–ª–æ–Ω–∞\n‚Äî –û—Ç–¥–µ–ª–∫–∞ –∫–æ–∂–µ–π —Ä—ã—á–∞–≥–∞ –ö–ü–ü\n‚Äî –ö–æ–∂–∞–Ω—ã–π —Ä—É–ª—å\n‚Äî –ü–∞–Ω–æ—Ä–∞–º–Ω–∞—è –∫—Ä—ã—à–∞\n‚Äî –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø–µ—Ä–µ–¥–Ω–∏–µ —Å–∏–¥–µ–Ω–∏—è\n‚Äî –¢—Ä–µ—Ç–∏–π –∑–∞–¥–Ω–∏–π –ø–æ–¥–≥–æ–ª–æ–≤–Ω–∏–∫\n‚Äî –ü–µ—Ä–µ–¥–Ω–∏–π —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø–æ–¥–ª–æ–∫–æ—Ç–Ω–∏–∫\n‚Äî –ü–æ–¥—Ä—É–ª–µ–≤—ã–µ –ª–µ–ø–µ—Å—Ç–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á\n‚Äî –ù–∞–∫–ª–∞–¥–∫–∏ –Ω–∞ –ø–æ—Ä–æ–≥–∏\n–≠–∫—Å—Ç–µ—Ä—å–µ—Ä:\n‚Äî –†–∞–∑–º–µ—Ä –¥–∏—Å–∫–æ–≤ 21‚Ä≥\n‚Äî –¢–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–µ–∫–ª–∞\n–û—Å–≤–µ—â–µ–Ω–∏–µ:\n‚Äî –°–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã–µ —Ñ–∞—Ä—ã\n‚Äî –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ñ–∞—Ä—ã\n‚Äî –û–≥–Ω–∏ –¥–Ω–µ–≤–Ω–æ–≥–æ —Ö–æ–¥–∞\n‚Äî –ö–æ—Ä—Ä–µ–∫—Ç–æ—Ä —Ñ–∞—Ä\n–ö–æ–º–ø–ª–µ–∫—Ç–Ω–æ—Å—Ç—å:\n‚Äî –û—Ç–º–µ—Ç–∫–∏ –¢–û –ß–∞—Å—Ç–∏—á–Ω–æ\n‚Äî –ü–¢–°\n‚Äî –°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n‚Äî 2 –∫–æ–º–ø–ª–µ–∫—Ç–∞ –∫–ª—é—á–µ–π\n‚Äî –î–æ–∫–∞—Ç–∫–∞",
        "year": 2018,
        "generation": "III (2017‚Äî2023)",
        "body_type": "–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫",
        "equipment": "Cayenne",
        "modification": "3.0 4WD AT (340 –ª.—Å.)",
        "drive_type": "–ü–æ–ª–Ω—ã–π",
        "transmission_type": "–ê–≤—Ç–æ–º–∞—Ç",
        "engine_type": "–ë–µ–Ω–∑–∏–Ω",
        "doors_number": 5,
        "color": "–ß—ë—Ä–Ω—ã–π",
        "pts": "–û—Ä–∏–≥–∏–Ω–∞–ª",
        "owners_count": "1",
        "mileage": 106406,
        "latitude": 55.796339,
        "longitude": 37.938199
    }

    debug_model = load_model()
    time_start = time.perf_counter()
    pred = debug_model.predict(car)
    time_end = time.perf_counter()
    print(f'predicted price - {pred}')
    print(f'time for one inference - {time_end - time_start}')


